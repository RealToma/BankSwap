{"version":3,"sources":["components/EasyMde/index.tsx"],"names":["Wrapper","styled","div","theme","colors","input","cardBorder","shadows","inset","text","card","background","defaultOptions","autofocus","status","hideIcons","spellChecker","styleSelectedText","SimpleMde","options","onTextChange","props","ref","useRef","onTextChangeHandler","useEffect","simpleMde","EasyMde","merge","element","current","codemirror","on","value","toTextArea","readOnly"],"mappings":"uRAYMA,EAAUC,IAAOC,IAAV,skBAEK,qBAAGC,MAAkBC,OAAOC,SAC1B,qBAAGF,MAAkBC,OAAOE,cAG9B,qBAAGH,MAAkBI,QAAQC,SAKlC,qBAAGL,MAAkBC,OAAOK,QAIvB,qBAAGN,MAAkBO,KAAKC,cACxB,qBAAGR,MAAkBC,OAAOE,cAGnC,qBAAGH,MAAkBC,OAAOK,QAI1B,qBAAGN,MAAkBC,OAAOK,QAIrB,qBAAGN,MAAkBC,OAAOO,cAU5CC,EAAkC,CACtCC,WAAW,EACXC,QAAQ,EACRC,UAAW,CAAC,QAAS,aAAc,UAAW,gBAC9CC,cAAc,EACdC,mBAAmB,GA6BNC,UA1B6B,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,aAAiBC,EAAY,iBAC7EC,EAAMC,mBACNC,EAAsBD,iBAAOH,GAiBnC,OAfAK,qBAAU,WACR,IAAIC,EAAY,IAAIC,IAAQC,IAAM,CAAEC,QAASP,EAAIQ,SAAWlB,EAAgBO,IAM5E,OAJAO,EAAUK,WAAWC,GAAG,UAAU,WAChCR,EAAoBM,QAAQJ,EAAUO,YAGjC,WACDP,IACFA,EAAUQ,aACVR,EAAY,SAGf,CAACP,EAASK,EAAqBF,IAGhC,cAACtB,EAAD,UACE,sCAAUsB,IAAKA,EAAKa,UAAQ,GAAKd","file":"static/js/30.efd08b3e.chunk.js","sourcesContent":["import React, { TextareaHTMLAttributes, useEffect, useRef } from 'react'\r\nimport EasyMde from 'easymde'\r\nimport styled from 'styled-components'\r\nimport merge from 'lodash/merge'\r\n\r\nimport 'easymde/dist/easymde.min.css'\r\n\r\ninterface SimpleMdeProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'onChange'> {\r\n  options?: EasyMde.Options\r\n  onTextChange: (value: string) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  .EasyMDEContainer .CodeMirror {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    box-shadow: ${({ theme }) => theme.shadows.inset};\r\n    padding: 16px;\r\n  }\r\n\r\n  .CodeMirror-code {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .editor-toolbar {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    border-top-left-radius: 16px;\r\n    border-top-right-radius: 16px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n\r\n    a,\r\n    button {\r\n      color: ${({ theme }) => theme.colors.text};\r\n\r\n      &:hover,\r\n      &.active {\r\n        background: ${({ theme }) => theme.colors.background};\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n/**\r\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\r\n */\r\nconst defaultOptions: EasyMde.Options = {\r\n  autofocus: false,\r\n  status: false,\r\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\r\n  spellChecker: false,\r\n  styleSelectedText: false,\r\n}\r\n\r\nconst SimpleMde: React.FC<SimpleMdeProps> = ({ options, onTextChange, ...props }) => {\r\n  const ref = useRef()\r\n  const onTextChangeHandler = useRef(onTextChange)\r\n\r\n  useEffect(() => {\r\n    let simpleMde = new EasyMde(merge({ element: ref.current }, defaultOptions, options))\r\n\r\n    simpleMde.codemirror.on('change', () => {\r\n      onTextChangeHandler.current(simpleMde.value())\r\n    })\r\n\r\n    return () => {\r\n      if (simpleMde) {\r\n        simpleMde.toTextArea()\r\n        simpleMde = null\r\n      }\r\n    }\r\n  }, [options, onTextChangeHandler, ref])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <textarea ref={ref} readOnly {...props} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default SimpleMde\r\n"],"sourceRoot":""}