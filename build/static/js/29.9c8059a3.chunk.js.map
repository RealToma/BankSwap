{"version":3,"sources":["views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Teams/components/TeamListCard.tsx","views/Teams/index.tsx","state/teams/hooks.ts"],"names":["NoProfileCard","t","useTranslation","mb","isActive","alignItems","justifyContent","flexDirection","scale","as","Link","to","id","mt","HeaderWrapper","styled","div","theme","colors","textSubtle","TeamHeader","useProfile","isInitialized","profile","showProfileCallout","color","bold","TeamRank","isDark","getBackground","Body","mediaQueries","md","Info","Avatar","img","TeamName","Heading","attrs","MobileAvatar","DesktopAvatar","StyledTeamCard","Card","TeamCard","rank","team","avatar","src","images","alt","fontSize","name","pr","description","width","mr","style","alignSelf","points","toLocaleString","ml","users","variant","Teams","useTeams","teams","isLoading","teamList","Object","values","topTeams","orderBy","Page","spin","map","index","TeamListCard","useTeam","useSelector","state","data","dispatch","useAppDispatch","useEffect","fetchTeam","fetchTeams"],"mappings":"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","file":"static/js/29.9c8059a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NoProfileCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card mb=\"32px\" isActive>\r\n      <CardBody>\r\n        <Flex\r\n          alignItems={['start', null, 'center']}\r\n          justifyContent={['start', null, 'space-between']}\r\n          flexDirection={['column', null, 'row']}\r\n        >\r\n          <div>\r\n            <Heading scale=\"lg\" mb=\"8px\">\r\n              {t('You havenâ€™t set up your profile yet!')}\r\n            </Heading>\r\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\r\n          </div>\r\n          <Button as={Link} to=\"/create-profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\r\n            {t('Set up now')}\r\n          </Button>\r\n        </Flex>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NoProfileCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport NoProfileCard from './NoProfileCard'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst TeamHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, profile } = useProfile()\r\n  const showProfileCallout = isInitialized && !profile\r\n\r\n  return (\r\n    <>\r\n      {showProfileCallout && <NoProfileCard />}\r\n      <HeaderWrapper>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\r\n          {t('Teams & Profiles')}\r\n        </Heading>\r\n        <Text bold>\r\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\r\n        </Text>\r\n      </HeaderWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamHeader\r\n","import React from 'react'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Card, CommunityIcon, Flex, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Team } from 'config/constants/types'\r\n\r\ninterface TeamCardProps {\r\n  rank: number\r\n  team: Team\r\n}\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst TeamRank = styled.div`\r\n  align-self: stretch;\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  flex: none;\r\n  padding: 16px 0;\r\n  text-align: center;\r\n  width: 56px;\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: start;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst Info = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 50%;\r\n`\r\n\r\nconst TeamName = styled(Heading).attrs({ as: 'h3' })`\r\n  font-size: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst MobileAvatar = styled.div`\r\n  flex: none;\r\n  margin-right: 8px;\r\n\r\n  ${Avatar} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst DesktopAvatar = styled.div`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n    margin-left: 24px;\r\n\r\n    ${Avatar} {\r\n      height: 128px;\r\n      width: 128px;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledTeamCard = styled(Card)`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst TeamCard: React.FC<TeamCardProps> = ({ rank, team }) => {\r\n  const { t } = useTranslation()\r\n  const avatar = <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\r\n\r\n  return (\r\n    <StyledTeamCard id={`team-${team.id}`}>\r\n      <Flex>\r\n        <TeamRank>\r\n          <Text bold fontSize=\"24px\">\r\n            {rank}\r\n          </Text>\r\n        </TeamRank>\r\n        <Body>\r\n          <Info>\r\n            <Flex alignItems=\"center\" mb=\"16px\">\r\n              <MobileAvatar>{avatar}</MobileAvatar>\r\n              <TeamName>{team.name}</TeamName>\r\n            </Flex>\r\n            <Text as=\"p\" color=\"textSubtle\" pr=\"24px\" mb=\"16px\">\r\n              {t(team.description)}\r\n            </Text>\r\n            <Flex>\r\n              <Flex>\r\n                {/* alignSelf for Safari fix */}\r\n                <PrizeIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\r\n                <Text fontSize=\"24px\" bold>\r\n                  {team.points.toLocaleString()}\r\n                </Text>\r\n              </Flex>\r\n              <Flex ml=\"24px\">\r\n                {/* alignSelf for Safari fix */}\r\n                <CommunityIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\r\n                <Text fontSize=\"24px\" bold>\r\n                  {team.users.toLocaleString()}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Info>\r\n          <Button as={Link} to={`/teams/${team?.id}`} variant=\"secondary\" scale=\"sm\">\r\n            {t('See More')}\r\n          </Button>\r\n          <DesktopAvatar>{avatar}</DesktopAvatar>\r\n        </Body>\r\n      </Flex>\r\n    </StyledTeamCard>\r\n  )\r\n}\r\n\r\nexport default TeamCard\r\n","import React from 'react'\r\nimport { AutoRenewIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport Page from 'components/Layout/Page'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TeamListCard from './components/TeamListCard'\r\nimport TeamHeader from './components/TeamHeader'\r\n\r\nconst Teams = () => {\r\n  const { t } = useTranslation()\r\n  const { teams, isLoading } = useTeams()\r\n  const teamList = Object.values(teams)\r\n  const topTeams = orderBy(teamList, ['points', 'id', 'name'], ['desc', 'asc', 'asc'])\r\n\r\n  return (\r\n    <Page>\r\n      <TeamHeader />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\r\n        <Heading scale=\"xl\">{t('Teams')}</Heading>\r\n        {isLoading && <AutoRenewIcon spin />}\r\n      </Flex>\r\n      {topTeams.map((team, index) => (\r\n        <TeamListCard key={team.id} rank={index + 1} team={team} />\r\n      ))}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Teams\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n"],"sourceRoot":""}