{"version":3,"sources":["views/Voting/components/Proposals/tags.tsx","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/components/CastVoteModal/types.ts","views/Voting/Proposal/Details.tsx","views/Voting/components/TextEllipsis.tsx","views/Voting/Proposal/Results.tsx","views/Voting/components/CastVoteModal/MainView.tsx","views/Voting/components/CastVoteModal/index.tsx","views/Voting/Proposal/Vote.tsx","views/Voting/components/Proposal/VotesLoading.tsx","views/Voting/components/Proposal/Row.tsx","views/Voting/components/Proposal/VoteRow.tsx","views/Voting/Proposal/Votes.tsx","views/Voting/Proposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","state/voting/hooks.ts"],"names":["ProposalStateTag","proposalState","props","ProposalState","ACTIVE","PENDING","ProposalTypeTag","isCoreProposal","VotingBox","styled","div","theme","colors","cardBorder","ModalInner","mb","maxWidth","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","t","useTranslation","as","fontSize","color","textTransform","bold","formatNumber","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","block","isActive","useWeb3React","account","useState","votingPower","setVotingPower","isLoading","setIsLoading","useEffect","a","simpleRpcProvider","getBlockNumber","blockNumber","getActivePools","eligiblePools","poolAddresses","map","contractAddress","getAddress","getVotingPower","IFOPoolBalance","prevVotingPower","parseFloat","fetchVotingPower","Table","table","text","TableBox","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","children","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","ConfirmVoteView","DetailBox","Box","background","Details","proposal","startDate","Date","start","endDate","end","href","IPFS_GATEWAY","id","ml","slice","getBscScanLink","author","truncateHash","snapshot","state","format","TextEllipsis","Text","Results","choices","votes","results","calculateVoteResults","votingStatus","useGetVotingStateLoadingStatus","totalVotes","getTotalFromVotes","VotingStateLoadingStatus","IDLE","choice","index","choiceVotes","totalChoiceVote","progress","hasVoted","some","vote","voter","toLowerCase","mt","title","variant","outline","mr","primaryStep","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","LOADING","times","length","count","height","MainView","isPending","onConfirm","onViewDetails","onDismiss","label","onClick","style","cursor","width","endIcon","spin","disabled","CastVoteModal","onSuccess","proposalId","MAIN","view","setView","modalIsOpen","setModalIsOpen","setIsPending","toastError","useToast","useWeb3Provider","library","connector","useTheme","isStartView","handleBack","DETAILS","handleDismiss","handleConfirmVote","voteMsg","JSON","stringify","generatePayloadData","type","SnapshotCommand","VOTE","payload","value","metadata","toString","signMessage","sig","msg","address","sendSnapshotData","message","console","error","onBack","hideCloseButton","headerBackground","gradients","cardHeader","Choice","isChecked","isDisabled","ChoiceText","Vote","setVote","toastSuccess","dispatch","useAppDispatch","handleSuccess","fetchVotes","Number","useModal","presentCastVoteModal","flexShrink","checked","onChange","ConnectWalletButton","Row","Flex","StyledSkeleton","Skeleton","VotesLoading","AddressColumn","attrs","ChoiceColumn","VotingPowerColumn","Grid","sm","VoteRow","isVoter","hasVotingPower","parseVotePower","incomingVote","Votes","showAll","setShowAll","orderedVotes","orderBy","displayVotes","isFinished","py","px","Proposal","useParams","useGetProposal","useGetVotes","voteLoadingStatus","proposalLoadingStatus","useGetProposalLoadingStatus","hasAccountVoted","isPageLoading","fetchProposal","Container","Page","Link","to","startIcon","body","PageLoader","ADMINS","includes","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","generateMetaData","plugins","network","strategies","name","params","symbol","tokens","cake","decimals","version","SNAPSHOT_VERSION","timestamp","now","toFixed","space","PANCAKE_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","Error","error_description","data","SNAPSHOT_VOTING_API","reduce","accum","choiceText","power","PROPOSALS_TO_SHOW","VOTE_THRESHOLD","useGetProposals","useSelector","voting","Object","values","_inValid"],"mappings":"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","file":"static/js/15.962b6440.chunk.js","sourcesContent":["import React from 'react'\r\nimport { TagProps } from '@pancakeswap/uikit'\r\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface ProposalStateTagProps extends TagProps {\r\n  proposalState: ProposalState\r\n}\r\n\r\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\r\n  if (proposalState === ProposalState.ACTIVE) {\r\n    return <VoteNowTag {...props} />\r\n  }\r\n\r\n  if (proposalState === ProposalState.PENDING) {\r\n    return <SoonTag {...props} />\r\n  }\r\n\r\n  return <ClosedTag {...props} />\r\n}\r\n\r\ninterface ProposalTypeTagProps extends TagProps {\r\n  isCoreProposal: boolean\r\n}\r\n\r\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\r\n  if (isCoreProposal) {\r\n    return <CoreTag {...props} />\r\n  }\r\n\r\n  return <CommunityTag {...props} />\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: number\r\n  cakeBalance: number\r\n  cakeVaultBalance: number\r\n  cakePoolBalance: number\r\n  poolsBalance: number\r\n  cakeBnbLpBalance: number\r\n  ifoPoolBalance: number\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n  ifoPoolBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {formatNumber(total, 0, 3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('IFO Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(ifoPoolBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('CAKE BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: number\r\n  cakeVaultBalance: number\r\n  cakePoolBalance: number\r\n  poolsBalance: number\r\n  cakeBnbLpBalance: number\r\n  ifoPoolBalance: number\r\n  total: number\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: 0,\r\n  cakeVaultBalance: 0,\r\n  cakePoolBalance: 0,\r\n  poolsBalance: 0,\r\n  cakeBnbLpBalance: 0,\r\n  ifoPoolBalance: 0,\r\n  total: 0,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n          IFOPoolBalance,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: parseFloat(cakeBalance),\r\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\r\n            cakePoolBalance: parseFloat(cakePoolBalance),\r\n            poolsBalance: parseFloat(poolsBalance),\r\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\r\n            ifoPoolBalance: IFOPoolBalance ? parseFloat(IFOPoolBalance) : 0,\r\n            total: parseFloat(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 8px;\r\n  }\r\n`\r\nconst TableBox = styled.div`\r\n  width: 100%;\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst AStyle = styled.a`\r\n  word-break: break-all;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: ({ ...props }) => {\r\n    return (\r\n      <TableBox>\r\n        <Table>{props.children}</Table>\r\n      </TableBox>\r\n    )\r\n  },\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n  a: AStyle,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n","import { InjectedModalProps } from '@pancakeswap/uikit'\r\n\r\nexport enum ConfirmVoteView {\r\n  MAIN = 'main',\r\n  DETAILS = 'details',\r\n}\r\n\r\nexport interface CastVoteModalProps extends InjectedModalProps {\r\n  onSuccess: () => Promise<void>\r\n  proposalId: string\r\n  vote: {\r\n    label: string\r\n    value: number\r\n  }\r\n  block?: number\r\n}\r\n","import React from 'react'\r\nimport { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { format } from 'date-fns'\r\nimport { Proposal } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { IPFS_GATEWAY } from '../config'\r\nimport { ProposalStateTag } from '../components/Proposals/tags'\r\n\r\ninterface DetailsProps {\r\n  proposal: Proposal\r\n}\r\n\r\nconst DetailBox = styled(Box)`\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 16px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ proposal }) => {\r\n  const { t } = useTranslation()\r\n  const startDate = new Date(proposal.start * 1000)\r\n  const endDate = new Date(proposal.end * 1000)\r\n\r\n  return (\r\n    <Card mb=\"16px\">\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Details')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Flex alignItems=\"center\" mb=\"8px\">\r\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\r\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\r\n            {proposal.id.slice(0, 8)}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" mb=\"8px\">\r\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\r\n          <LinkExternal href={getBscScanLink(proposal.author, 'address')} ml=\"8px\">\r\n            {truncateHash(proposal.author)}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" mb=\"16px\">\r\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\r\n          <LinkExternal href={getBscScanLink(proposal.snapshot, 'block')} ml=\"8px\">\r\n            {proposal.snapshot}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <DetailBox p=\"16px\">\r\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\r\n          <Flex alignItems=\"center\">\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {t('Start Date')}\r\n            </Text>\r\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\r\n          </Flex>\r\n          <Flex alignItems=\"center\">\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {t('End Date')}\r\n            </Text>\r\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\r\n          </Flex>\r\n        </DetailBox>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst TextEllipsis = styled(Text)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport default TextEllipsis\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  Text,\r\n  Flex,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Heading,\r\n  Progress,\r\n  Skeleton,\r\n  Tag,\r\n  CheckmarkCircleIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\r\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\r\nimport TextEllipsis from '../components/TextEllipsis'\r\n\r\ninterface ResultsProps {\r\n  choices: string[]\r\n  votes: Vote[]\r\n}\r\n\r\nconst Results: React.FC<ResultsProps> = ({ choices, votes }) => {\r\n  const { t } = useTranslation()\r\n  const results = calculateVoteResults(votes)\r\n  const votingStatus = useGetVotingStateLoadingStatus()\r\n  const { account } = useWeb3React()\r\n  const totalVotes = getTotalFromVotes(votes)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Current Results')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {votingStatus === VotingStateLoadingStatus.IDLE &&\r\n          choices.map((choice, index) => {\r\n            const choiceVotes = results[choice] || []\r\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\r\n            const progress = totalVotes === 0 ? 0 : (totalChoiceVote / totalVotes) * 100\r\n            const hasVoted = choiceVotes.some((vote) => {\r\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\r\n            })\r\n\r\n            return (\r\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\r\n                <Flex alignItems=\"center\" mb=\"8px\">\r\n                  <TextEllipsis mb=\"4px\" title={choice}>\r\n                    {choice}\r\n                  </TextEllipsis>\r\n                  {hasVoted && (\r\n                    <Tag variant=\"success\" outline ml=\"8px\">\r\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\r\n                    </Tag>\r\n                  )}\r\n                </Flex>\r\n                <Box mb=\"4px\">\r\n                  <Progress primaryStep={progress} scale=\"sm\" />\r\n                </Box>\r\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: formatNumber(totalChoiceVote, 0, 2) })}</Text>\r\n                  <Text>\r\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\r\n                  </Text>\r\n                </Flex>\r\n              </Box>\r\n            )\r\n          })}\r\n\r\n        {votingStatus === VotingStateLoadingStatus.LOADING &&\r\n          times(choices.length).map((count, index) => {\r\n            return (\r\n              <Box key={count} mt={index > 0 ? '24px' : '0px'}>\r\n                <Skeleton height=\"36px\" mb=\"4px\" />\r\n              </Box>\r\n            )\r\n          })}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport TextEllipsis from '../TextEllipsis'\r\nimport { VotingBox, ModalInner } from './styles'\r\nimport { CastVoteModalProps } from './types'\r\n\r\ninterface MainViewProps {\r\n  vote: {\r\n    label: string\r\n    value: number\r\n  }\r\n  isLoading: boolean\r\n  isPending: boolean\r\n  total: number\r\n  onConfirm: () => void\r\n  onViewDetails: () => void\r\n  onDismiss: CastVoteModalProps['onDismiss']\r\n}\r\n\r\nconst MainView: React.FC<MainViewProps> = ({\r\n  vote,\r\n  total,\r\n  isPending,\r\n  isLoading,\r\n  onConfirm,\r\n  onViewDetails,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <ModalInner>\r\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\r\n          {t('Voting For')}\r\n        </Text>\r\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\r\n          {vote.label}\r\n        </TextEllipsis>\r\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\r\n          {t('Your Voting Power')}\r\n        </Text>\r\n        {isLoading ? (\r\n          <Skeleton height=\"64px\" mb=\"24px\" />\r\n        ) : (\r\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\r\n            <Text bold fontSize=\"20px\">\r\n              {formatNumber(total, 0, 3)}\r\n            </Text>\r\n            <IconButton scale=\"sm\" variant=\"text\">\r\n              <ChevronRightIcon width=\"24px\" />\r\n            </IconButton>\r\n          </VotingBox>\r\n        )}\r\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\r\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\r\n        </Text>\r\n      </ModalInner>\r\n      <Button\r\n        isLoading={isPending}\r\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={isLoading || total === 0}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={onConfirm}\r\n      >\r\n        {t('Confirm Vote')}\r\n      </Button>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Cancel')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainView\r\n","import React, { useState } from 'react'\r\nimport { Box, Modal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\r\nimport MainView from './MainView'\r\nimport DetailsView from './DetailsView'\r\nimport { generatePayloadData, Message, sendSnapshotData } from '../../helpers'\r\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\r\n\r\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\r\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { toastError } = useToast()\r\n  const { library, connector } = useWeb3Provider()\r\n  const { theme } = useTheme()\r\n  const {\r\n    isLoading,\r\n    total,\r\n    cakeBalance,\r\n    cakeVaultBalance,\r\n    cakePoolBalance,\r\n    poolsBalance,\r\n    cakeBnbLpBalance,\r\n    ifoPoolBalance,\r\n    verificationHash,\r\n  } = useGetVotingPower(block, modalIsOpen)\r\n\r\n  const isStartView = view === ConfirmVoteView.MAIN\r\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\r\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\r\n\r\n  const title = {\r\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\r\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\r\n  }\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  const handleConfirmVote = async () => {\r\n    try {\r\n      setIsPending(true)\r\n      const voteMsg = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.VOTE,\r\n        payload: {\r\n          proposal: proposalId,\r\n          choice: vote.value,\r\n          metadata: {\r\n            votingPower: total.toString(),\r\n            verificationHash,\r\n          },\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(connector, library, account, voteMsg)\r\n      const msg: Message = { address: account, msg: voteMsg, sig }\r\n\r\n      // Save proposal to snapshot\r\n      await sendSnapshotData(msg)\r\n      setIsPending(false)\r\n\r\n      await onSuccess()\r\n\r\n      handleDismiss()\r\n    } catch (error) {\r\n      setIsPending(false)\r\n      toastError(t('Error'), error?.message)\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title[view]}\r\n      onBack={handleBack}\r\n      onDismiss={onDismiss}\r\n      hideCloseButton={!isStartView}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {view === ConfirmVoteView.MAIN && (\r\n          <MainView\r\n            vote={vote}\r\n            isLoading={isLoading}\r\n            isPending={isPending}\r\n            total={total}\r\n            onConfirm={handleConfirmVote}\r\n            onViewDetails={handleViewDetails}\r\n            onDismiss={handleDismiss}\r\n          />\r\n        )}\r\n        {view === ConfirmVoteView.DETAILS && (\r\n          <DetailsView\r\n            total={total}\r\n            cakeBalance={cakeBalance}\r\n            ifoPoolBalance={ifoPoolBalance}\r\n            cakeVaultBalance={cakeVaultBalance}\r\n            cakePoolBalance={cakePoolBalance}\r\n            poolsBalance={poolsBalance}\r\n            cakeBnbLpBalance={cakeBnbLpBalance}\r\n          />\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CastVoteModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { Proposal } from 'state/types'\r\nimport { fetchVotes } from 'state/voting'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport CastVoteModal from '../components/CastVoteModal'\r\n\r\ninterface VoteProps extends CardProps {\r\n  proposal: Proposal\r\n}\r\n\r\ninterface State {\r\n  label: string\r\n  value: number\r\n}\r\n\r\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\r\n  border-radius: 16px;\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  padding: 16px;\r\n`\r\n\r\nconst ChoiceText = styled.div`\r\n  flex: 1;\r\n  padding-left: 16px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 0;\r\n`\r\n\r\nconst Vote: React.FC<VoteProps> = ({ proposal, ...props }) => {\r\n  const [vote, setVote] = useState<State>(null)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess } = useToast()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleSuccess = async () => {\r\n    toastSuccess(t('Vote cast!'))\r\n    dispatch(fetchVotes({ proposalId: proposal.id, block: Number(proposal.snapshot) }))\r\n  }\r\n\r\n  const [presentCastVoteModal] = useModal(\r\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\r\n  )\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Cast your vote')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {proposal.choices.map((choice, index) => {\r\n          const isChecked = index + 1 === vote?.value\r\n\r\n          const handleChange = () => {\r\n            setVote({\r\n              label: choice,\r\n              value: index + 1,\r\n            })\r\n          }\r\n\r\n          return (\r\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\r\n              <div style={{ flexShrink: 0 }}>\r\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\r\n              </div>\r\n              <ChoiceText>\r\n                <Text as=\"span\" title={choice}>\r\n                  {choice}\r\n                </Text>\r\n              </ChoiceText>\r\n            </Choice>\r\n          )\r\n        })}\r\n        {account ? (\r\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\r\n            {t('Cast Vote')}\r\n          </Button>\r\n        ) : (\r\n          <ConnectWalletButton />\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Vote\r\n","import React from 'react'\r\nimport { Box, Flex, Skeleton } from '@pancakeswap/uikit'\r\nimport times from 'lodash/times'\r\nimport styled from 'styled-components'\r\n\r\nconst Row = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledSkeleton = styled(Skeleton)`\r\n  flex: 1;\r\n`\r\n\r\nconst VotesLoading = () => {\r\n  return (\r\n    <Box>\r\n      {times(10).map((index) => (\r\n        <Row key={index}>\r\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\r\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\r\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\r\n        </Row>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default VotesLoading\r\n","import styled from 'styled-components'\r\nimport { Grid, Box } from '@pancakeswap/uikit'\r\n\r\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\r\n  grid-area: address;\r\n`\r\n\r\nexport const ChoiceColumn = styled(Box)`\r\n  grid-area: choice;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const VotingPowerColumn = styled(Box)`\r\n  justify-self: end;\r\n  grid-area: vote;\r\n`\r\n\r\nconst Row = styled(Grid)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  grid-gap: 8px;\r\n  grid-template-areas:\r\n    'address address address'\r\n    'choice choice vote';\r\n  grid-template-columns: 1fr 1fr 120px;\r\n  padding: 8px 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n    grid-template-areas: 'address choice vote';\r\n    padding: 16px 24px;\r\n  }\r\n`\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Vote } from 'state/types'\r\nimport { IPFS_GATEWAY } from '../../config'\r\nimport TextEllipsis from '../TextEllipsis'\r\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\r\n\r\ninterface VoteRowProps {\r\n  vote: Vote\r\n  isVoter: boolean\r\n}\r\n\r\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\r\n  const { t } = useTranslation()\r\n  const hasVotingPower = !!vote.metadata?.votingPower\r\n  const votingPower = hasVotingPower\r\n    ? parseFloat(vote.metadata.votingPower).toLocaleString(undefined, {\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 3,\r\n      })\r\n    : '--'\r\n\r\n  return (\r\n    <Row>\r\n      <AddressColumn>\r\n        <Flex alignItems=\"center\">\r\n          <LinkExternal href={getBscScanLink(vote.voter, 'address')}>{truncateHash(vote.voter)}</LinkExternal>\r\n          {isVoter && (\r\n            <Tag variant=\"success\" outline ml=\"8px\">\r\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\r\n            </Tag>\r\n          )}\r\n        </Flex>\r\n      </AddressColumn>\r\n      <ChoiceColumn>\r\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\r\n          {vote.proposal.choices[vote.choice - 1]}\r\n        </TextEllipsis>\r\n      </ChoiceColumn>\r\n      <VotingPowerColumn>\r\n        <Flex alignItems=\"center\" justifyContent=\"end\">\r\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\r\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\r\n        </Flex>\r\n      </VotingPowerColumn>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default VoteRow\r\n","import React, { useState } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Card,\r\n  CardHeader,\r\n  ChevronDownIcon,\r\n  Flex,\r\n  Heading,\r\n  Button,\r\n  ChevronUpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\r\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\r\nimport VotesLoading from '../components/Proposal/VotesLoading'\r\nimport VoteRow from '../components/Proposal/VoteRow'\r\n\r\nconst VOTES_PER_VIEW = 20\r\n\r\ninterface VotesProps {\r\n  votes: Vote[]\r\n}\r\n\r\nconst parseVotePower = (incomingVote: Vote) => {\r\n  let votingPower = parseFloat(incomingVote?.metadata?.votingPower)\r\n  if (!votingPower) votingPower = 0\r\n  return votingPower\r\n}\r\n\r\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\r\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\r\n  const voteStatus = useGetVotingStateLoadingStatus()\r\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\r\n\r\n  const handleClick = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Heading as=\"h3\" scale=\"md\">\r\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\r\n          </Heading>\r\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\r\n        </Flex>\r\n      </CardHeader>\r\n      {!isFinished && <VotesLoading />}\r\n\r\n      {isFinished && displayVotes.length > 0 && (\r\n        <>\r\n          {displayVotes.map((vote) => {\r\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\r\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\r\n          })}\r\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\r\n            <Button\r\n              width=\"100%\"\r\n              onClick={handleClick}\r\n              variant=\"text\"\r\n              endIcon={\r\n                showAll ? (\r\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\r\n                ) : (\r\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\r\n                )\r\n              }\r\n              disabled={!isFinished}\r\n            >\r\n              {showAll ? t('Hide') : t('See All')}\r\n            </Button>\r\n          </Flex>\r\n        </>\r\n      )}\r\n\r\n      {isFinished && displayVotes.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\r\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\r\n        </Flex>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Votes\r\n","import React, { useEffect } from 'react'\r\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useAppDispatch } from 'state'\r\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\r\nimport {\r\n  useGetProposal,\r\n  useGetVotingStateLoadingStatus,\r\n  useGetVotes,\r\n  useGetProposalLoadingStatus,\r\n} from 'state/voting/hooks'\r\nimport { fetchProposal, fetchVotes } from 'state/voting'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { isCoreProposal } from '../helpers'\r\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\r\nimport Layout from '../components/Layout'\r\nimport Details from './Details'\r\nimport Results from './Results'\r\nimport Vote from './Vote'\r\nimport Votes from './Votes'\r\nimport { PageMeta } from '../../../components/Layout/Page'\r\n\r\nconst Proposal = () => {\r\n  const { id }: { id: string } = useParams()\r\n  const proposal = useGetProposal(id)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const votes = useGetVotes(id)\r\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\r\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\r\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\r\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\r\n  const isPageLoading =\r\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProposal(id))\r\n  }, [id, dispatch])\r\n\r\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\r\n  useEffect(() => {\r\n    if (proposalId && snapshot) {\r\n      dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\r\n    }\r\n  }, [proposalId, snapshot, dispatch])\r\n\r\n  if (!proposal) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <PageMeta />\r\n      <Box mb=\"40px\">\r\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\r\n          {t('Back to Vote Overview')}\r\n        </Button>\r\n      </Box>\r\n      <Layout>\r\n        <Box>\r\n          <Box mb=\"32px\">\r\n            <Flex alignItems=\"center\" mb=\"8px\">\r\n              <ProposalStateTag proposalState={proposal.state} />\r\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\r\n            </Flex>\r\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\r\n              {proposal.title}\r\n            </Heading>\r\n            <Box>\r\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\r\n            </Box>\r\n          </Box>\r\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\r\n            <Vote proposal={proposal} mb=\"16px\" />\r\n          )}\r\n          <Votes votes={votes} />\r\n        </Box>\r\n        <Box>\r\n          <Details proposal={proposal} />\r\n          <Results choices={proposal.choices} votes={votes} />\r\n        </Box>\r\n      </Layout>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposal\r\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return ADMINS.includes(proposal.author.toLowerCase())\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'BS', address: tokens.cake.address, decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnapshotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    let power = parseFloat(vote.metadata?.votingPower)\r\n\r\n    if (!power) {\r\n      power = 0\r\n    }\r\n\r\n    return accum + power\r\n  }, 0)\r\n}\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMINS = [\r\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\r\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\r\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\r\n].map((address) => address.toLowerCase())\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","import { useSelector } from 'react-redux'\r\nimport { State } from '../types'\r\n\r\n// Voting\r\nexport const useGetProposals = () => {\r\n  const proposals = useSelector((state: State) => state.voting.proposals)\r\n  return Object.values(proposals)\r\n}\r\n\r\nexport const useGetProposal = (proposalId: string) => {\r\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\r\n  return proposal\r\n}\r\n\r\nexport const useGetVotes = (proposalId: string) => {\r\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\r\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\r\n}\r\n\r\nexport const useGetVotingStateLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\r\n  return votingStatus\r\n}\r\n\r\nexport const useGetProposalLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\r\n  return votingStatus\r\n}\r\n"],"sourceRoot":""}